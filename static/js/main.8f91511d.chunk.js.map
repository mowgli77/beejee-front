{"version":3,"sources":["components/ToDo.js","API/api.js","redux/actions.js","redux/types.js","components/ToDoTitle.js","components/Pagination.js","components/ToDoList.js","components/common/FormControl.js","components/common/validators.js","components/AddToDoForm.js","components/AddToDo.js","components/Header.js","components/AutorizationForm.js","components/Autorization.js","App.js","serviceWorker.js","redux/toDosReducer.js","redux/rootReducer.js","index.js"],"names":["ToDo","todoItem","deleteToDoThunk","changeStatusThunk","adminChangedThunk","isAuth","showAlert","useState","reductMode","setReductMode","todo","inputValue","setInputValue","name","email","autoFocus","value","onChange","e","currentTarget","type","onClick","id","className","role","s","status","checked","changed","instance","axios","create","baseURL","addToDoAPI","body","post","deleteToDoAPI","delete","loginAPI","getAuthAPI","get","confirmAuthAPI","authStatus","auth","changeStatusAPI","adminChangedAPI","changeStatus","isAuthAction","payload","text","dispatch","setTimeout","getToDosThunk","a","response","data","confirmAuthThunk","ToDoTitle","sortNamesByABC","sortNamesByZYX","sortEmailsByABC","sortToDosByABC","sortEmailsByZYX","sortToDosByZYX","isNamesSorted","setIsNamesSorted","isEmailSorted","setIsEmailSorted","isToDoSorted","setIsToDoSorted","scope","width","Pagination","toDosCount","pageSize","onChangedPage","pagesCount","Math","ceil","pages","i","push","currentPage","setCurrentPage","rightBorder","leftBorder","prevPage","filter","p","map","changePage","nextPage","connect","state","todos","toDoDatas","alert","getToDosCountThunk","splice","todosPage","setTodosPage","useEffect","t","key","length","style","textAlign","Textarea","input","meta","touched","error","warning","label","props","placeholder","color","Input","required","undefined","maxTextLength","max","notEmail","test","length20","length100","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","newToDo","addNewToDoThunk","values","trim","reqBody","Date","now","class","exact","to","autorization","loginThunk","Redirect","console","log","login","password","getAuthThunk","path","render","Boolean","window","location","hostname","match","Initialstate","rootReducer","combineReducers","action","q","sort","item1","item2","reverse","todol","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8f91511d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst ToDo = ({todoItem, deleteToDoThunk, changeStatusThunk, adminChangedThunk, isAuth, showAlert}) => {\r\n\r\n    const [reductMode, setReductMode] = useState(false)\r\n    const [inputValue, setInputValue] = useState(todoItem.todo)\r\n\r\n    const changeStatus = () => {\r\n        const s = todoItem.status === 1 ? 0 : 1\r\n        changeStatusThunk(s, todoItem.id)\r\n    }\r\n    const changeInputValue = (e) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n    const saveAdminChanges = () => {\r\n        if (todoItem.todo !== inputValue) {\r\n            adminChangedThunk(todoItem.id, inputValue, 1, isAuth)\r\n            setReductMode(false)\r\n        } else {\r\n            showAlert('There are no any changes')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>{todoItem.name}</td>\r\n            <td>{todoItem.email}</td>\r\n            {!isAuth ? <td>{todoItem.todo}</td>\r\n                :\r\n            <td> {reductMode ? <div><input autoFocus={true} value={inputValue} onChange={changeInputValue}/>\r\n                    <button type={\"button\"} onClick={saveAdminChanges} className={\"btn btn-dark btn-sm mt-n1 ml-2\"}>Save</button>\r\n                    <button type={\"button\"} onClick={() => setReductMode(false)} className={\"btn btn-dark btn-sm mt-n1 ml-2\"}>Exit</button>\r\n                </div>\r\n                : <span onClick={() => setReductMode(true)} role={\"button\"}>{todoItem.todo}</span>} </td>}\r\n            {isAuth ? <td className={\"text-center\"}><input type={'checkbox'} onClick={changeStatus} checked={todoItem.status}/></td>\r\n            : <td className={\"text-center\"}><input type={'checkbox'} checked={todoItem.status}/></td>}\r\n\r\n            <td className={\"text-center\"}><input type={'checkbox'} checked={todoItem.changed}/>\r\n            </td>\r\n            {isAuth == true && <td>\r\n                <button className={\"btn btn-dark\"} onClick={() => deleteToDoThunk(todoItem.id)}>Delete Todo</button>\r\n            </td>}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ToDo\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://l9dhv.sse.codesandbox.io/api'\r\n})\r\n\r\nexport const getToDoAPI = () => {\r\n    return instance.get('/todos')\r\n}\r\nexport const addToDoAPI = (body) => {\r\n    return instance.post('/addtodo', body)\r\n}\r\nexport const deleteToDoAPI = (id) => {\r\n    return instance.delete(`/delete/${id}`)\r\n}\r\nexport const getToDosCountAPI = () => {\r\n    return instance.get(`/count`)\r\n}\r\nexport const loginAPI = (body) => {\r\n    return instance.post(`/auth`, body)\r\n}\r\nexport const getAuthAPI = (body) => {\r\n    return instance.get(`/getauth`, body)\r\n}\r\nexport const confirmAuthAPI = (authStatus) => {\r\n    return instance.post(`/authstatus`, {auth: authStatus})\r\n}\r\nexport const changeStatusAPI = (status, id) => {\r\n    return instance.post(`/updatestatus`, {status, id})\r\n}\r\nexport const adminChangedAPI = (id, todo, changed, isAuth) => {\r\n    return instance.post(`/changed`, {id, todo, changed, isAuth})\r\n}\r\n","import {\r\n    CHANGE_STATUS,\r\n    GET_AUTH,\r\n    GET_TODOS,\r\n    HIDE_ALERT,\r\n    IS_AUTH,\r\n    SHOW_ALERT,\r\n    SORT_EMAILS_BY_ABC,\r\n    SORT_EMAILS_BY_ZYX,\r\n    SORT_NAMES_BY_ABC,\r\n    SORT_NAMES_BY_ZYX,\r\n    SORT_TODOS_BY_ABC,\r\n    SORT_TODOS_BY_ZYX,\r\n    TODOS_COUNT\r\n} from \"./types\";\r\nimport {\r\n    addToDoAPI,\r\n    adminChangedAPI,\r\n    changeStatusAPI,\r\n    confirmAuthAPI,\r\n    deleteToDoAPI,\r\n    getAuthAPI,\r\n    getToDoAPI,\r\n    getToDosCountAPI,\r\n    loginAPI\r\n} from \"../API/api\";\r\n\r\nconst getToDos = (payload) => ({type: GET_TODOS, payload})\r\nconst getAuth = (payload) => ({type: GET_AUTH, payload})\r\nconst getToDosCount = (payload) => ({type: TODOS_COUNT, payload})\r\nconst changeStatus = (status, id) => ({type: CHANGE_STATUS, status, id})\r\nexport const isAuthAction = (payload) => ({type: IS_AUTH, payload})\r\nexport const sortNamesByABC = () => ({type: SORT_NAMES_BY_ABC})\r\nexport const sortEmailsByABC = () => ({type: SORT_EMAILS_BY_ABC})\r\nexport const sortToDosByABC = () => ({type: SORT_TODOS_BY_ABC})\r\nexport const sortNamesByZYX = () => ({type: SORT_NAMES_BY_ZYX})\r\nexport const sortEmailsByZYX = () => ({type: SORT_EMAILS_BY_ZYX})\r\nexport const sortToDosByZYX = () => ({type: SORT_TODOS_BY_ZYX})\r\n\r\nexport const showAlert = (text) => dispatch => {\r\n    dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: text\r\n    })\r\n    setTimeout(() => dispatch({\r\n        type: HIDE_ALERT\r\n    }), 2500)\r\n}\r\n\r\nexport const getToDosThunk = () => async (dispatch) => {\r\n    const response = await getToDoAPI()\r\n    dispatch(getToDos(response.data))\r\n}\r\n\r\nexport const getToDosCountThunk = () => async (dispatch) => {\r\n    const response = await getToDosCountAPI()\r\n    dispatch(getToDosCount(response.data))\r\n}\r\n\r\nexport const addNewToDoThunk = (body) => async (dispatch) => {\r\n    const response = await addToDoAPI(body)\r\n    dispatch(showAlert(response.data))\r\n}\r\nexport const deleteToDoThunk = (id) => async (dispatch) => {\r\n    const response = await deleteToDoAPI(id)\r\n    dispatch(getToDosThunk())\r\n    dispatch(showAlert(response.data))\r\n}\r\nexport const getAuthThunk = () => async (dispatch) => {\r\n    const response = await getAuthAPI()\r\n    dispatch(isAuthAction(response.data.auth))\r\n}\r\nexport const confirmAuthThunk = (authStatus) => async (dispatch) => {\r\n    const response = await confirmAuthAPI(authStatus)\r\n}\r\n\r\nexport const loginThunk = (body) => async (dispatch) => {\r\n        const response = await loginAPI(body)\r\n    if (response.data) {\r\n        dispatch(getAuth(response.data))\r\n        dispatch(isAuthAction(1))\r\n        dispatch(confirmAuthThunk(1))\r\n    } else {\r\n        dispatch(showAlert('Invalid login or password!'))\r\n    }\r\n}\r\nexport const changeStatusThunk = (status, id) => async (dispatch) => {\r\n    const response = await changeStatusAPI(status, id)\r\n    dispatch(changeStatus(status, id))\r\n}\r\nexport const adminChangedThunk = (id, todo, changed, isAuth) => async (dispatch) => {\r\n    const res = await getAuthAPI()\r\n    if (res.data.auth === 1) {\r\n        const response = await adminChangedAPI(id, todo, changed, isAuth)\r\n        dispatch(getToDosThunk())\r\n    } else {\r\n        dispatch(showAlert('You are not autorized'))\r\n    }\r\n}","export const GET_TODOS = 'GET_TODOS'\r\nexport const TODOS_COUNT = 'TODOS_COUNT'\r\nexport const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SORT_NAMES_BY_ABC = 'SORT_NAMES_BY_ABC'\r\nexport const SORT_EMAILS_BY_ABC = 'SORT_EMAILS_BY_ABC'\r\nexport const SORT_TODOS_BY_ABC = 'SORT_TODOS_BY_ABC'\r\nexport const SORT_NAMES_BY_ZYX = 'SORT_NAMES_BY_ZYX'\r\nexport const SORT_EMAILS_BY_ZYX = 'SORT_EMAILS_BY_ZYX'\r\nexport const SORT_TODOS_BY_ZYX = 'SORT_TODOS_BY_ZYX'\r\nexport const GET_AUTH = 'GET_AUTH'\r\nexport const IS_AUTH = 'IS_AUTH'\r\nexport const CHANGE_STATUS = 'CHANGE_STATUS'\r\nexport const ADMIN_CHANGED = 'ADMIN_CHANGED'\r\n","import React, {useState} from 'react';\r\n\r\nconst ToDoTitle = ({sortNamesByABC, sortNamesByZYX,  sortEmailsByABC, sortToDosByABC, sortEmailsByZYX, sortToDosByZYX, isAuth}) => {\r\n    const [isNamesSorted, setIsNamesSorted] = useState(null)\r\n    const [isEmailSorted, setIsEmailSorted] = useState(null)\r\n    const [isToDoSorted, setIsToDoSorted] = useState(null)\r\n    const sortNames = () => {\r\n        setIsEmailSorted(null)\r\n        setIsToDoSorted(null)\r\n        if (!isNamesSorted) {\r\n        sortNamesByABC()\r\n            setIsNamesSorted(1)\r\n        } else if (isNamesSorted === 1) {\r\n            sortNamesByZYX()\r\n            setIsNamesSorted(0)\r\n        }\r\n    }\r\n    const sortEmails = () => {\r\n        setIsNamesSorted(null)\r\n        setIsToDoSorted(null)\r\n        if (!isEmailSorted) {\r\n            sortEmailsByABC()\r\n            setIsEmailSorted(1)\r\n        } else if (isEmailSorted === 1) {\r\n            sortEmailsByZYX()\r\n            setIsEmailSorted(0)\r\n        }\r\n    }\r\n    const sortToDos = () => {\r\n        setIsNamesSorted(null)\r\n        setIsEmailSorted(null)\r\n        if (!isToDoSorted) {\r\n            sortToDosByABC()\r\n            setIsToDoSorted(1)\r\n        } else if (isToDoSorted === 1) {\r\n            sortToDosByZYX()\r\n            setIsToDoSorted(0)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"col\" className={\"align-middle \"}><button onClick={sortNames} type={\"button\"} className={\"btn btn-dark\"}>Name\r\n                {isNamesSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isNamesSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" className={\"align-middle \"}><button onClick={sortEmails} type={\"button\"} className={\"btn btn-dark\"}>Email\r\n                {isEmailSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isEmailSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" width={400} className={\"align-middle \"}><button onClick={sortToDos} type={\"button\"} className={\"btn btn-dark\"}>ToDo Description\r\n                {isToDoSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isToDoSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" width={100} className={\"align-middle text-center\"}>Status</th>\r\n            <th scope=\"col\" width={100} className={\"align-middle text-center\"}>Changed by Administrator</th>\r\n            {isAuth == true && <th scope=\"col\" width={150} className={\"align-middle \"}>Delete Todo</th>}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ToDoTitle","import React, {useState} from \"react\";\r\n\r\n\r\nexport const Pagination = ({toDosCount, pageSize, onChangedPage, ...props}) => {\r\n\r\n    const pagesCount = Math.ceil(toDosCount / pageSize);\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const changePage = (p) => {\r\n        onChangedPage(p - 1)\r\n        setCurrentPage(p)\r\n    }\r\n    const prevPage = (currentPage) => {\r\n        onChangedPage(currentPage - 2)\r\n        setCurrentPage(currentPage - 1)\r\n    }\r\n    const nextPage = (currentPage) => {\r\n        onChangedPage(currentPage)\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const rightBorder = ((pagesCount - currentPage) > 10 && currentPage <= 4) ? 10 : ((pagesCount - currentPage) >= 6 && currentPage > 4) ? currentPage + 5 : pagesCount\r\n    const leftBorder = (pagesCount - currentPage) < 5 ? (pagesCount - 9): currentPage > 4 ? currentPage - 4 : 1\r\n\r\n    return <div className={\"d-flex justify-content-center \"}>\r\n        <ul className={\"pagination \"} role={\"button\"}>\r\n            {pagesCount > 0 && <li className={`page-item ${currentPage === 1 ? \"disabled\" : null}`}><span className={\"page-link btn btn-dark\"}\r\n                                              onClick={() => prevPage(currentPage)}>\r\n            Previous</span></li>}\r\n            {pages.filter(p => rightBorder >= p && p >= leftBorder).map(p => {\r\n                return <li className={`page-item ${currentPage === p ? \"active\": null}`}><span className={\"page-link\"}\r\n                                                         onClick={() => changePage(p)}>{p}</span></li>\r\n            })\r\n            }\r\n            {pagesCount > 0 && <li className={`page-item ${currentPage === pagesCount ? \"disabled\" : null}`}><span className={\"page-link\"}\r\n                                              onClick={() => nextPage(currentPage)}>\r\n                Next</span></li>}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Pagination","import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ToDo from \"./ToDo\";\r\nimport {\r\n    adminChangedThunk,\r\n    changeStatusThunk,\r\n    confirmAuthThunk,\r\n    deleteToDoThunk,\r\n    getToDosCountThunk,\r\n    getToDosThunk, showAlert,\r\n    sortEmailsByABC,\r\n    sortEmailsByZYX,\r\n    sortNamesByABC,\r\n    sortNamesByZYX,\r\n    sortToDosByABC,\r\n    sortToDosByZYX\r\n} from \"../redux/actions\";\r\nimport ToDoTitle from \"./ToDoTitle\";\r\nimport Pagination from \"./Pagination\";\r\n\r\n\r\nconst ToDoList = ({todos, getToDosThunk, deleteToDoThunk, getToDosCountThunk, pageSize, toDosCount, sortNamesByABC, isAuth, showAlert,\r\n                      sortNamesByZYX, sortEmailsByABC, sortToDosByABC, sortEmailsByZYX, sortToDosByZYX, alert, changeStatusThunk, adminChangedThunk}) => {\r\n\r\n    const [todosPage, setTodosPage] = useState([...todos].splice(0, 3))\r\n\r\n    useEffect(() => {\r\n        getToDosThunk()\r\n        getToDosCountThunk()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTodosPage([...todos].splice(0, 3))\r\n    }, [todos])\r\n\r\n    const onChangedPage = (currentPage) => {\r\n        setTodosPage([...todos].splice(currentPage * 3, 3))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert && <div className=\"alert alert-danger mt-5 mb-n4\" role=\"alert\">\r\n                {alert}\r\n            </div>}\r\n            <table className=\"table table-striped align-middle table-hover mt-5 mb-5 \">\r\n                <thead className={\"thead-dark\"}>\r\n                <ToDoTitle sortNamesByABC={sortNamesByABC}\r\n                           sortNamesByZYX={sortNamesByZYX}\r\n                           sortEmailsByABC={sortEmailsByABC}\r\n                           sortToDosByABC={sortToDosByABC}\r\n                           sortEmailsByZYX={sortEmailsByZYX}\r\n                           sortToDosByZYX={sortToDosByZYX}\r\n                           isAuth={isAuth}\r\n                />\r\n                </thead>\r\n                <tbody>\r\n                {todosPage.map(t => <ToDo todoItem={t}\r\n                                          key={t.id}\r\n                                          deleteToDoThunk={deleteToDoThunk}\r\n                                          changeStatusThunk={changeStatusThunk}\r\n                                          adminChangedThunk={adminChangedThunk}\r\n                                          isAuth={isAuth}\r\n                                          showAlert={showAlert}\r\n                />)}\r\n                </tbody>\r\n            </table>\r\n            {todosPage.length == 0 && <h1 style={{textAlign: 'center'}}>You don`t have tasks</h1>}\r\n            <Pagination toDosCount={toDosCount}\r\n                        pageSize={pageSize}\r\n                        onChangedPage={onChangedPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.toDoDatas.todos,\r\n    toDosCount: state.toDoDatas.toDosCount,\r\n    pageSize: state.toDoDatas.pageSize,\r\n    alert: state.toDoDatas.alert,\r\n    auth: state.toDoDatas.auth,\r\n    isAuth: state.toDoDatas.isAuth\r\n})\r\nexport default connect(mapStateToProps, {getToDosThunk,\r\n    deleteToDoThunk,\r\n    getToDosCountThunk,\r\n    confirmAuthThunk,\r\n    sortNamesByABC,\r\n    sortNamesByZYX,\r\n    sortEmailsByABC,\r\n    sortToDosByABC,\r\n    sortEmailsByZYX,\r\n    sortToDosByZYX,\r\n    changeStatusThunk,\r\n    adminChangedThunk,\r\n    showAlert\r\n})(ToDoList)\r\n","import React from \"react\";\r\n\r\nexport const Textarea = ({input, meta: {touched, error, warning}, label, ...props}) => {\r\n    return <div>\r\n        <div className={\"form-group\"}>\r\n            <textarea className={\"form-control\"} placeholder={label} {...input} {...props} />\r\n            {touched &&\r\n            ((error && <span style={{color: 'red'}}>{error}</span>) ||\r\n                (warning && <span style={{color: 'red'}}>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Input = ({input, label, meta: {touched, error, warning}, ...props}) => {\r\n    return <div>\r\n        <div className={\"form-group\"}>\r\n            <input className={\"form-control\"} placeholder={label} {...input} {...props} />{props.text}\r\n            {touched &&\r\n            ((error && <span style={{color: 'red'}}>{error}</span>) ||\r\n                (warning && <span style={{color: 'red'}}>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n}\r\n","export const required = value => value ? undefined : '! Required';\r\n\r\nexport const maxTextLength = max=> value =>\r\n    value && value.length > max ? `! Must be ${max} characters or less` : undefined;\r\n\r\nexport const notEmail = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? '! Invalid email address'\r\n        : undefined;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"./common/FormControl\";\r\nimport {maxTextLength, notEmail, required} from \"./common/validators\";\r\n\r\nconst length20 = maxTextLength(20)\r\nconst length100 = maxTextLength(100)\r\n\r\nconst AddToDoForm = ({handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input} name={'name'} label={'Your name'} validate={[required, length20]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} name={'email'} label={'Your email'} validate={[required, notEmail]} type={'email'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Textarea} name={'todo'} label={'Description of new ToDo'} validate={[required, length100]}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" className={\"btn btn-dark\"}>Add new ToDo</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'newToDo'})(AddToDoForm);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addNewToDoThunk, getToDosThunk} from \"../redux/actions\";\r\nimport AddToDoForm from \"./AddToDoForm\";\r\n\r\n\r\nconst AddToDo = ({addNewToDoThunk, newToDo, alert, getToDosThunk}) => {\r\n\r\n    const addNewToDo = (values) => {\r\n        if (values.name.trim().length > 0 && values.email.trim().length > 0 && values.todo.trim().length > 0) {\r\n            const reqBody = {\r\n                id: Date.now(),\r\n                name: values.name,\r\n                email: values.email,\r\n                todo: values.todo,\r\n                status: 0,\r\n                changed: 0\r\n            }\r\n            addNewToDoThunk(reqBody)\r\n            getToDosThunk()\r\n            newToDo.values.name = newToDo.values.email = newToDo.values.todo = ''\r\n        }\r\n    }\r\n    return (\r\n        <div className={\"mt-5\"}>\r\n            {alert && <div className=\"alert alert-success\" role=\"alert\">\r\n                    {alert}\r\n                </div>}\r\n            <AddToDoForm onSubmit={addNewToDo}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.toDoDatas.todos,\r\n    alert: state.toDoDatas.alert,\r\n    newToDo: state.form.newToDo,\r\n})\r\nexport default connect(mapStateToProps, {addNewToDoThunk, getToDosThunk})(AddToDo)\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {confirmAuthThunk, isAuthAction} from \"../redux/actions\";\r\n\r\n\r\nconst Header = ({isAuth, confirmAuthThunk, isAuthAction}) => {\r\n\r\n    const logout = () => {\r\n        confirmAuthThunk(0)\r\n        isAuthAction(0)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark view overlay\">\r\n            <div className={\"container view overlay\"}>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-dark\">\r\n                        <NavLink exact to={'/'} className=\"navbar-brand\">\r\n                            Home\r\n                        </NavLink>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-dark\">\r\n                        <NavLink exact to={'/addtodo'} className=\"navbar-brand\">\r\n                            Add ToDo\r\n                        </NavLink>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    { isAuth ? <button onClick={logout} type=\"button\" className=\"btn btn-light\">Logout</button>\r\n                        :\r\n                    <NavLink exact to={'/auth'} className=\"nav-link\">\r\n                        <button type=\"button\" className=\"btn btn-light\">Loginning</button>\r\n                    </NavLink> }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.toDoDatas.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {confirmAuthThunk, isAuthAction})(Header)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"./common/FormControl\";\r\nimport {required} from \"./common/validators\"\r\n\r\nconst AutorizationForm = ({handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input} name={'login'} label={'Your login'} validate={[required]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} name={'password'} label={'Your password'} validate={[required]}\r\n                   type={'password'}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" className={\"btn btn-dark\"}>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'autorization'})(AutorizationForm)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AutorizationForm from \"./AutorizationForm\";\r\nimport {loginThunk, showAlert} from \"../redux/actions\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\n\r\nconst Autorization = ({autorization, alert, loginThunk, isAuth, showAlert}) => {\r\n\r\n    const loginning = (values) => {\r\n        console.log(values)\r\n        if (values.login.trim().length > 0 && values.password.trim().length > 0) {\r\n            const reqBody = {\r\n                login: values.login,\r\n                password: values.password\r\n            }\r\n            loginThunk(reqBody)\r\n            autorization.values.login = autorization.values.password = ''\r\n        } else {\r\n            showAlert('The fields are empty')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {isAuth == true && <Redirect to={'/'}/>}\r\n            {alert && <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                {alert}\r\n            </div>}\r\n            <div className={\"d-flex justify-content-center mt-5\"}>\r\n                <AutorizationForm onSubmit={loginning}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.toDoDatas.alert,\r\n    autorization: state.form.autorization,\r\n    isAuth: state.toDoDatas.isAuth\r\n})\r\nexport default connect(mapStateToProps, {loginThunk, showAlert})(Autorization)\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport ToDoList from \"./components/ToDoList\";\nimport AddToDo from \"./components/AddToDo\";\nimport Header from \"./components/Header\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Autorization from \"./components/Autorization\";\nimport {connect} from \"react-redux\";\nimport {getAuthThunk} from \"./redux/actions\";\n\nfunction App({getAuthThunk}) {\n\n    useEffect(() => {\n        getAuthThunk()\n    }, [])\n\n    return (\n        <>\n            <Header/>\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path={'/'}\n                           render={() => <ToDoList/>}/>\n                    <Route exact path={'/addtodo'}\n                           render={() => <AddToDo/>}/>\n                    <Route exact path={'/auth'}\n                           render={() => <Autorization/>}/>\n                </Switch>\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, {getAuthThunk})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    ADMIN_CHANGED,\r\n    CHANGE_STATUS,\r\n    GET_AUTH,\r\n    GET_TODOS,\r\n    HIDE_ALERT,\r\n    IS_AUTH,\r\n    SHOW_ALERT,\r\n    SORT_EMAILS_BY_ABC,\r\n    SORT_EMAILS_BY_ZYX,\r\n    SORT_NAMES_BY_ABC,\r\n    SORT_NAMES_BY_ZYX,\r\n    SORT_TODOS_BY_ABC,\r\n    SORT_TODOS_BY_ZYX,\r\n    TODOS_COUNT\r\n} from \"./types\";\r\n\r\nconst Initialstate = {\r\n    todos: [],\r\n    toDosCount: null,\r\n    pageSize: 3,\r\n    alert: null,\r\n    auth: null,\r\n    isAuth: 0\r\n}\r\n\r\nexport const toDosReducer = (state = Initialstate, action) => {\r\n    switch (action.type) {\r\n        case GET_TODOS:\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            }\r\n        case TODOS_COUNT:\r\n            return {\r\n                ...state,\r\n                toDosCount: action.payload.q\r\n            }\r\n        case GET_AUTH:\r\n            return {\r\n                ...state,\r\n                auth: action.payload\r\n            }\r\n        case IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case CHANGE_STATUS:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(t => {\r\n                    if (t.id === action.id) {\r\n                        return { ...t, status: action.status}\r\n                    }\r\n                    return t\r\n                })\r\n            }\r\n        case ADMIN_CHANGED:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(t => {\r\n                    if (t.id === action.id) {\r\n                        return { ...t, changed: action.changed}\r\n                    }\r\n                    return t\r\n                })\r\n            }\r\n        case SHOW_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.payload\r\n            }\r\n        case HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: null\r\n            }\r\n        case SORT_NAMES_BY_ABC:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].sort((item1, item2) => {\r\n                    if (item1.name > item2.name) {\r\n                        return 1\r\n                    }\r\n                    if (item1.name < item2.name) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n        case SORT_NAMES_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].reverse()\r\n            }\r\n        case SORT_EMAILS_BY_ABC:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].sort((item1, item2) => {\r\n                    if (item1.email > item2.email) {\r\n                        return 1\r\n                    }\r\n                    if (item1.email < item2.email) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n        case SORT_EMAILS_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].reverse()\r\n            }\r\n        case SORT_TODOS_BY_ABC:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].sort((item1, item2) => {\r\n                    if (item1.todo > item2.todol) {\r\n                        return 1\r\n                    }\r\n                    if (item1.todo < item2.todo) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n        case SORT_TODOS_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                todos: [ ...state.todos].reverse()\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\"\r\nimport {toDosReducer} from \"./toDosReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    toDoDatas: toDosReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from \"redux-thunk\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}